fun main(args: String){
    var array: Int[] = [0, 0, 0, 0]

    var channelInt: ChanInt = make(ChanInt, 4) // create channel of type int with buffer size 4
    var channelStr: ChanString = make(ChanString) // create channel of type string with buffer size 1

    fun set(chan: ChanInt, array: Int[], idx: Int, nb: Int){ //function that sets a value of array at index idx
        array[idx] = nb

        chan <- array[idx]
    }

    channelStr <- "GO" //send value to channel

    var msg: String = <-channelStr //retrieve value from channel
    print(msg)

    //set array elements and send to channelInt
    routine set(channelInt, array, 1, 4) //send function set as a routine to run async
    routine set(channelInt, array, 2, 5)
    set(channelInt, array, 0, 3)
    set(channelInt, array, 3, 6)

    channelStr <- "END"

    var i: Int = 0
    while i <= 3 { //empty the channel
        var output: Int = <-channelInt
        print(output + "")

        i = i + 1
    }

    msg = <-channelStr
    print(msg)


    print("Valid: 3 4 5 6 or 4 3 5 6")

    close(channelInt) //close channels
    close(channelStr)
}

main("")